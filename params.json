{
  "name": "Mkcloudatcost",
  "tagline": "Make a cloudatcost cloud PDQ",
  "body": "# mkcloudatcost\r\nMake a cloudatcost cloud PDQ\r\n\r\n## Auto\r\n\r\nfor the next commands in the future you will be able to precede by incanting\r\n`make trusty` (or `make jessie`, `make centos`, etc) a number of times which will\r\ncreate a trusty (jessie/centos) host each time,\r\nbut the API is broken for now, \r\nso you'll have to create them yourself using the [GUI](https://panel.cloudatcost.com/)\r\n\r\nThen once you have some fresh unnamed hosts, you can use my auto provisioners to finish up on them.\r\nThis will change their run mode to normal, which prevents them from turning off in 7 days.\r\nThen it will rename, and set reverse DNS, key the server, do all normal updates, and install the newest docker.\r\n\r\n`make auto` this will prepare a trusty host for docker hosting\r\n\r\n`make jessieauto` this will prepare a jessie host for docker hosting\r\n\r\n`make centosauto` this will prepare a centos host for docker hosting\r\n\r\n## Detailed Usage\r\n\r\n### make fullList\r\n\r\n`make fullLIst` or `make f`  will get you a file name fullLIst,\r\n\r\n### workingList\r\n\r\ncopy the fullList file to `workingList`  i.e. `cp fullList workingList`\r\nnow open this file and delete the lines containing servers you do NOT want to work with\r\nleaving the servers you DO want to work with, now most other commands work on this `workingList`\r\nit will look something like this:\r\n```\r\n 555697574 Not Assigned null 64.196.201.216 VyHequ 555697574  \r\n 555697575 Not Assigned null 64.196.201.215 A3eRHn 555697575  \r\n 555697576 Not Assigned null 64.196.201.214 qagp6u 555697576  \r\n 555697577 Not Assigned null 64.196.201.213 JAaate 555697577  \r\n 555697578 Not Assigned null 64.196.201.212 sEmn8y 555697578  \r\n```\r\n\r\nthis lends itself to all sorts tom foolery like for example if you already have some servers you've made into \r\na kubernetes cluster you can `cat workingLIst >> workingList.centos` to add some new servers to a permanent list\r\n\r\nthen `make clean`, provision a new group of centos servers (using `make centos` in the future, but for now the web interface works)\r\n\r\nuse `make centosauto` on them to get them keyed, updated, and the latest docker installed\r\n\r\n`make tester22` can be used to test them out and ensure the centosauto above worked.\r\n\r\nfinally add them to you centos pool and reprovision your kubernetes cluster\r\n\r\n`cat workingLIst >> workingList.centos` then `cp workingList.centos workingList`\r\n\r\n`make kargo` and you should have a more nodes in your cluster once that finishes\r\n\r\n`kubectl get nodes`\r\n\r\n### make trusty\r\n should build you a trusty machine, but the API is not working with the newest datacenter \r\n (DC3, was working but then they switch back to DC2 and broken again)\r\n and as we are only able to provision into that datacenter this is broken for now\r\n but should work with cloudatcost fixes things on their end\r\n\r\n### make movein\r\n\r\n`make movein` this will execute my movein script on a fresh trusty instance getting you a 3.19 kernel docker 1.11 and overlayFS as your storage driver\r\n\r\n### make jessieauto\r\n\r\nmuch like `make auto` but intended for jessie machines\r\n\r\n### make centosauto\r\n\r\nmuch like auto but for centos7 machines\r\n\r\n### auto naming\r\n\r\nAll of the auto methods above invoke `make names.list`, which invokes `make chosenNames`,\r\nif you wanted to override and only use the greek gods,\r\nsimply copy that list to chosenNames and the Makefile will skip that step,\r\n\r\ne.g.\r\n```\r\ncp greekgods.names chosenNames\r\nrm names.list\r\nmake names.list\r\ncat names.list\r\n```\r\n\r\n### deleter\r\n\r\na delete function is not included for good reasons,\r\nbut every now and then I want to delete en masse,\r\nand I copy this section in and double check my `workingList` twice to not be naughty but nice!\r\n\r\n```\r\ndeleter:\r\n\t$(eval TMP := $(shell mktemp -d --suffix=DOCKERTMP))\r\n\t$(eval API_KEY := $(shell cat API_KEY))\r\n\t$(eval API_USERNAME := $(shell cat API_USERNAME))\r\n\t$(eval URL :=https://panel.cloudatcost.com/api/v1/delete.php)\r\n\t$(eval DATA :=key=$(API_KEY)&login=$(API_USERNAME))\r\n\twhile read SID HOSTNAME NAME IP ROOTPASSWORD ID; \\\r\n\t\tdo \\\r\n\t\techo \"curl -k -v --data '$(DATA)&sid=$$SID&mode=normal' '$(URL)'\" ; \\\r\n\t\tdone < workingList > $(TMP)/deleter \r\n\t-/bin/bash $(TMP)/deleter\r\n\t-@rm -Rf $(TMP)\r\n```\r\n\r\n### Kargo (WIP)\r\n\r\n`make kargo` should get you a kargo cluster made out of the `workingList`,\r\nat the moment this only works on centos machines using port22, I'm working on that though\r\n\r\n`make kargoConfig` should use the first master (the first machine in the `workingList`), \r\ngrab the certs, and setup `~/.kube/config` for you, this WIP though, thar be dragons\r\n\r\n### Gluster (WIP)\r\n\r\n`make gluster` should get you a cluster of glusterFS made out of the `workingList`,\r\nat the moment this only works on Trusty hosts as the ansible was written by Geerling for Trusty\r\n\r\n### Waffle.io\r\n\r\n[![Stories in Ready](https://badge.waffle.io/joshuacox/mkcloudatcost.svg?label=ready&title=Ready)](http://waffle.io/joshuacox/mkcloudatcost)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}